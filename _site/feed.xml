<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-26T01:51:13+08:00</updated><id>http://localhost:4000/</id><title type="html">Kong Jing</title><subtitle>Never ever forget pushing yourself out of your fucking comfort zone!</subtitle><entry><title type="html">序列化</title><link href="http://localhost:4000/%E5%BA%8F%E5%88%97%E5%8C%96/" rel="alternate" type="text/html" title="序列化" /><published>2020-05-26T09:30:00+08:00</published><updated>2020-05-26T09:30:00+08:00</updated><id>http://localhost:4000/%E5%BA%8F%E5%88%97%E5%8C%96</id><content type="html" xml:base="http://localhost:4000/%E5%BA%8F%E5%88%97%E5%8C%96/">&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;### 序列化&lt;/p&gt;

    &lt;p&gt;什么是序列化？&lt;/p&gt;

    &lt;p&gt;系统底层，数据的传输是使用的字节序列形式，那么进程通讯需要使用序列化与反序列化。&lt;/p&gt;

    &lt;p&gt;广义上来看，数据序列化就是讲数据结构或者对象转换成我们可以存储或者传输的数据格式的一个过程，在序列化的过程中，数据结构或者对象将其状态信息写入到临时或者持久性的存储区中。&lt;/p&gt;

    &lt;p&gt;数据序列化相当于我们原先的对象序列化概念作出了扩展，在对象序列化和反序列化中，我们熟知的两种方法，其一是java语言中提供的Serializable接口，其二是Android提供的parcelable接口，json或者sqlite，来实现网络传输或者数据的本地存储，都是数据的序列化。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;序列化&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;将数据结构或者对象转换成二进制串的过程。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;反序列化&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;将在序列化过程中所生成的二进制串换成数据结构或者对象的过程。&lt;/p&gt;

    &lt;p&gt;细节点。&lt;/p&gt;

    &lt;p&gt;intent socket http&lt;/p&gt;

    &lt;p&gt;序列化， 反序列化，概念&lt;/p&gt;

    &lt;p&gt;序列化的用途：网络上，跨进程。&lt;/p&gt;

    &lt;p&gt;序列化方案: serializable parcelable （二进制）&lt;/p&gt;

    &lt;p&gt;#### 如何选择合理的序列化方案&lt;/p&gt;

    &lt;p&gt;json xml&amp;amp;soap protobuf&lt;/p&gt;

    &lt;p&gt;协议： 数据结构&lt;/p&gt;

    &lt;p&gt;##### 序列化的特性&lt;/p&gt;

    &lt;p&gt;通用性， 支持跨平台，以及有稳定的公共包进行支持&lt;/p&gt;

    &lt;p&gt;强健性， 成熟度不够，语言/平台的不公平性&lt;/p&gt;

    &lt;p&gt;性能, 时间空间复杂度&lt;/p&gt;

    &lt;p&gt;可调试， 支持不到位，访问限制&lt;/p&gt;

    &lt;p&gt;扩展性， 支持新的业务字段，不影响老的服务。&lt;/p&gt;

    &lt;p&gt;安全性， 跨局域网的访问场景，序列化协议要兼容成熟的http传输层框架&lt;/p&gt;

    &lt;p&gt;#### serializable&lt;/p&gt;

    &lt;p&gt;Externalizable 接口&lt;/p&gt;

    &lt;p&gt;writeExternal()&lt;/p&gt;

    &lt;p&gt;readExternal()&lt;/p&gt;

    &lt;p&gt;ObjectOutputStream&lt;/p&gt;

    &lt;p&gt;ObjectInputStream&lt;/p&gt;

    &lt;p&gt;kotlin学习 jvm ——》 java&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Serializable的特点&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;\1. 可序列化类中，未实现SerialZable，那么不能序列化或者进行反序列化。&lt;/p&gt;

    &lt;p&gt;\2. 也就是说，反序列化的过程中，它的非可序列化的属性将会调用无参数构造函数重新创建。&lt;/p&gt;

    &lt;p&gt;\3. 因此这个属性的无参数构造函数必须可以访问，否则运行时会报错。&lt;/p&gt;

    &lt;p&gt;\4. 一个实现序列化的类，它的子类是可以序列化的。&lt;/p&gt;

    &lt;p&gt;serialVersionUID 解决要序列化的对象，版本有没有发生变化的问题。&lt;/p&gt;

    &lt;p&gt;client service&lt;/p&gt;

    &lt;p&gt;A 《- new A();&lt;/p&gt;

    &lt;p&gt;serialVersionUID = 2&lt;/p&gt;

    &lt;p&gt;控制版本&lt;/p&gt;

    &lt;p&gt;序列化步骤与数据了解&lt;/p&gt;

    &lt;p&gt;序列化的原理&lt;/p&gt;

    &lt;p&gt;序列化流程&lt;/p&gt;

    &lt;p&gt;```mermaid&lt;/p&gt;

    &lt;p&gt;graph TD&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;A[ObjectOutputStream] –&amp;gt;&lt;/td&gt;
          &lt;td&gt;A1&lt;/td&gt;
          &lt;td&gt;B(模块B)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;B –&amp;gt; C{判断条件C}&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;C –&amp;gt;&lt;/td&gt;
          &lt;td&gt;条件C1&lt;/td&gt;
          &lt;td&gt;D[模块D]&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;C –&amp;gt;&lt;/td&gt;
          &lt;td&gt;条件C2&lt;/td&gt;
          &lt;td&gt;E[模块E]&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;C –&amp;gt;&lt;/td&gt;
          &lt;td&gt;条件C3&lt;/td&gt;
          &lt;td&gt;F[模块F]&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;```&lt;/p&gt;

    &lt;p&gt;Serializable 需要注意的地方&lt;/p&gt;

    &lt;p&gt;多引用写入&lt;/p&gt;

    &lt;p&gt;子类实现序列化，父类不实现序列化/对象引用&lt;/p&gt;

    &lt;p&gt;类的演化&lt;/p&gt;

    &lt;p&gt;大量的使用反射 产生大量的临时对象&lt;/p&gt;

    &lt;p&gt;### Parcelable接口&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Java" /><summary type="html">### 序列化</summary></entry><entry><title type="html">在一台电脑上跑多个Tomcat</title><link href="http://localhost:4000/%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E8%B7%91%E5%A4%9A%E4%B8%AATomcat/" rel="alternate" type="text/html" title="在一台电脑上跑多个Tomcat" /><published>2018-07-03T01:23:08+08:00</published><updated>2018-07-03T01:23:08+08:00</updated><id>http://localhost:4000/%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E8%B7%91%E5%A4%9A%E4%B8%AATomcat</id><content type="html" xml:base="http://localhost:4000/%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E8%B7%91%E5%A4%9A%E4%B8%AATomcat/">&lt;p&gt;最近需要在同一台电脑上部署多个Tomcat，跑多个服务。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;复制多份Tomcat工程的文件夹，修改成多个文件名.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在tomcat文件夹下，找到conf目录下的server.xml，进行多个地方的修改。&lt;/p&gt;

    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/*修改SHUTDOWN端口号，默认是8005，将其修改为被占用的端口号，我个人习惯是给端口号+1*/
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Server&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8006&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shutdown=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SHUTDOWN&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
/*修改HTTP/1.1端口号，默认是8080*/
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Connector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8081&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connectionTimeout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;redirectPort=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8443&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
/*修改AJP/1.3端口号，默认是8009*/
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Connector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8010&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AJP/1.3&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;redirectPort=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8443&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;现在运行多个Tomcat试试。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="后端" /><summary type="html">最近需要在同一台电脑上部署多个Tomcat，跑多个服务。</summary></entry><entry><title type="html">vue2.5模板指令</title><link href="http://localhost:4000/vue2.5%E6%A8%A1%E6%9D%BF%E6%8C%87%E4%BB%A4/" rel="alternate" type="text/html" title="vue2.5模板指令" /><published>2018-06-26T09:59:21+08:00</published><updated>2018-06-26T09:59:21+08:00</updated><id>http://localhost:4000/vue2.5%E6%A8%A1%E6%9D%BF%E6%8C%87%E4%BB%A4</id><content type="html" xml:base="http://localhost:4000/vue2.5%E6%A8%A1%E6%9D%BF%E6%8C%87%E4%BB%A4/">&lt;p&gt;最近在学习 VUE，了解下模板指令&lt;/p&gt;

&lt;p&gt;–不应该使用箭头函数来使用 method–&lt;/p&gt;

&lt;h3 id=&quot;el-挂载点&quot;&gt;el 挂载点&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../img/el.png&quot; alt=&quot;el挂载点&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;v-text&quot;&gt;v-text&lt;/h3&gt;

&lt;p&gt;显示内容，v-html 与 v-text 的区别,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/v-text.png&quot; alt=&quot;v-text&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;v-html&quot;&gt;v-html&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../img/v-html.png&quot; alt=&quot;v-html&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;v-on&quot;&gt;v-on&lt;/h3&gt;

&lt;p&gt;点击事件,可以缩写为 @&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/v-on.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;属性绑定双向数据绑定&quot;&gt;属性绑定&amp;amp;双向数据绑定&lt;/h3&gt;

&lt;p&gt;v-bind&lt;/p&gt;

&lt;p&gt;简写  :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/v-bind.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;####v-model&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/v-model.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;v-showv-for&quot;&gt;v-show&amp;amp;v-for&lt;/h3&gt;

&lt;p&gt;显示，v-if是直接隐藏效率较低，v-show是改变css，效率高。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/v-for.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="前端" /><summary type="html">最近在学习 VUE，了解下模板指令</summary></entry><entry><title type="html">微信小程序rpx</title><link href="http://localhost:4000/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Frpx/" rel="alternate" type="text/html" title="微信小程序rpx" /><published>2018-06-10T08:08:21+08:00</published><updated>2018-06-10T08:08:21+08:00</updated><id>http://localhost:4000/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Frpx</id><content type="html" xml:base="http://localhost:4000/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Frpx/">&lt;ul&gt;
  &lt;li&gt;rpx（responsive pixel）: 可以根据屏幕宽度进行自适应。规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素。&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;设备&lt;/th&gt;
      &lt;th&gt;rpx换算px（屏幕宽度/750）&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;px换算rpx(750/屏幕宽度)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone5&lt;/td&gt;
      &lt;td&gt;1rpx=0.42px&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1px=2.34rpx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone6&lt;/td&gt;
      &lt;td&gt;1rpx= 0.5px&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1px = 2rpx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone6 Plus&lt;/td&gt;
      &lt;td&gt;1rpx=0.552px&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1px=1.81rpx&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;iPhone 7 宽高比 &lt;code class=&quot;highlighter-rouge&quot;&gt;375 x 667&lt;/code&gt;, 因此屏幕高度对应与 &lt;code class=&quot;highlighter-rouge&quot;&gt;667 / 375 x 750 rpx = 1334 rpx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;iPhone 7 Plus 宽高比 &lt;code class=&quot;highlighter-rouge&quot;&gt;414 x 736&lt;/code&gt;，因此屏幕高度对应与 &lt;code class=&quot;highlighter-rouge&quot;&gt;736 / 414 x 750 rpx = 1333.33 rpx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;iPhone X 宽高比 &lt;code class=&quot;highlighter-rouge&quot;&gt;375 x 812&lt;/code&gt;，因此屏幕高度对应与 &lt;code class=&quot;highlighter-rouge&quot;&gt;812 / 375 x 750 rpx = 1624 rpx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;行高通常为字号的1.4倍&lt;/p&gt;</content><author><name></name></author><category term="前端" /><summary type="html">rpx（responsive pixel）: 可以根据屏幕宽度进行自适应。规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素。</summary></entry><entry><title type="html">Nexus5x刷机到Android6.0.1</title><link href="http://localhost:4000/Nexus5x%E5%88%B7%E6%9C%BA%E5%88%B0Android6.0.1/" rel="alternate" type="text/html" title="Nexus5x刷机到Android6.0.1" /><published>2018-05-15T16:08:21+08:00</published><updated>2018-05-15T16:08:21+08:00</updated><id>http://localhost:4000/Nexus5x%E5%88%B7%E6%9C%BA%E5%88%B0Android6.0.1</id><content type="html" xml:base="http://localhost:4000/Nexus5x%E5%88%B7%E6%9C%BA%E5%88%B0Android6.0.1/">&lt;p&gt;最近想要把自己的谷歌亲儿子从 Android8.1 降级到 Android6.0.1。&lt;/p&gt;

&lt;p&gt;首先到 &lt;a href=&quot;http://www.shuame.com/faq/restore-tutorial/15311-google-nexus-5x--60-.html&quot;&gt;刷机精灵去下载&lt;/a&gt; Android6.0.1的固件。&lt;/p&gt;

&lt;p&gt;然后需要将 Nexus5x 的设备进行 &lt;strong&gt;解锁bootloader&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;首先肯定是要安装好adb和fastboot驱动。&lt;a href=&quot;http://www.androiddevtools.cn/#row&quot;&gt;platform-tools&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;开启开发者选项，然后勾选开启usb调试。您的手机或者平板还会弹出类似是否允许usb调试的窗口，选择yes。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;开发者选项里开启“oem解锁”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通过数据线链接设备和pc，然后在命令提示符输入&lt;code class=&quot;highlighter-rouge&quot;&gt;adb reboot bootloader&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设备进入bootloader模式后，在命令提示符输入&lt;code class=&quot;highlighter-rouge&quot;&gt;fastboot oem unlock&lt;/code&gt;,如果&lt;code class=&quot;highlighter-rouge&quot;&gt;fastboot oem unlock&lt;/code&gt;没用的话，请使用&lt;code class=&quot;highlighter-rouge&quot;&gt;fastboot flashing unlock&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;这时会弹出相应的界面（英文的），问您是否解锁，用音量键加来选择yes，即可开始解锁。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://www.inexus.co/data/attachment/portal/201501/02/191451qkjrjwe1jbqtr0x9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;您的设备将解锁，过程会很短，然后当界面显示有start的时候，选择start，即可重启进入系统，完成解锁&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接下来重新进入 bootloader，然后在pc上双击&lt;code class=&quot;highlighter-rouge&quot;&gt;双击运行一键刷机&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Android" /><summary type="html">最近想要把自己的谷歌亲儿子从 Android8.1 降级到 Android6.0.1。</summary></entry><entry><title type="html">AndroidStudio中打包jar包</title><link href="http://localhost:4000/AndroidStudio%E4%B8%AD%E6%89%93%E5%8C%85jar%E5%8C%85/" rel="alternate" type="text/html" title="AndroidStudio中打包jar包" /><published>2018-04-28T16:08:21+08:00</published><updated>2018-04-28T16:08:21+08:00</updated><id>http://localhost:4000/AndroidStudio%E4%B8%AD%E6%89%93%E5%8C%85jar%E5%8C%85</id><content type="html" xml:base="http://localhost:4000/AndroidStudio%E4%B8%AD%E6%89%93%E5%8C%85jar%E5%8C%85/">&lt;p&gt;Android Studio中打包jar包的方法&lt;/p&gt;

&lt;p&gt;Android studio中添加Moudle文件，Android类型，不是eclipse java类型。&lt;/p&gt;

&lt;p&gt;build工程，那么就可以在下面的路径中找到jar包，然后&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mylibrary/build/intermediates/bundles/debug/classes.jar./mylibrary/build/intermediates/bundles/release/classes.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Moudle中的build.gradle加入task来实现&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clearJar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'build/fcdev_v1.0.jar'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//jar包的名字，随便命名&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeJar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gradle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bundling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//指定生成的jar名&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;baseName&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fcdev_v1.0'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//从哪里打包class文件&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'build/intermediates/classes/release/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//打包到jar后的目录结构&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//去掉不需要打包的目录和文件&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BuildConfig.class'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'R.class'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//去掉R开头的文件&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;makeJar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dependsOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clearJar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;右侧gradle 中打包 &lt;strong&gt;makeJar&lt;/strong&gt; 功能双击,build中的 lib文件夹&lt;/p&gt;</content><author><name></name></author><category term="Android" /><summary type="html">Android Studio中打包jar包的方法</summary></entry><entry><title type="html">Bugly全量升级</title><link href="http://localhost:4000/Bugly%E5%85%A8%E9%87%8F%E5%8D%87%E7%BA%A7/" rel="alternate" type="text/html" title="Bugly全量升级" /><published>2018-03-07T00:00:00+08:00</published><updated>2018-03-07T00:00:00+08:00</updated><id>http://localhost:4000/Bugly%E5%85%A8%E9%87%8F%E5%8D%87%E7%BA%A7</id><content type="html" xml:base="http://localhost:4000/Bugly%E5%85%A8%E9%87%8F%E5%8D%87%E7%BA%A7/">&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;使用Bugly进行全量升级&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;配置.build&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.tencent.bugly:crashreport_upgrade:1.3.4'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;AndroidMainfest.xml中进行以下配置：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.READ_PHONE_STATE&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.ACCESS_NETWORK_STATE&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.ACCESS_WIFI_STATE&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.READ_LOGS&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.REQUEST_INSTALL_PACKAGES&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;activity&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.tencent.bugly.beta.ui.BetaActivity&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:configChanges=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;keyboardHidden|orientation|screenSize|locale&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:theme=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@android:style/Theme.Translucent&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;provider&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.support.v4.content.FileProvider&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:authorities=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${applicationId}.fileProvider&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:exported=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:grantUriPermissions=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta-data&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.support.FILE_PROVIDER_PATHS&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@xml/provider_paths&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/provider&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;代码中执行&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Bugly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;注册时申请的APPID&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="Android" /><summary type="html"></summary></entry><entry><title type="html">Android的keystore使用</title><link href="http://localhost:4000/Android%E7%9A%84keystore%E4%BD%BF%E7%94%A8/" rel="alternate" type="text/html" title="Android的keystore使用" /><published>2017-12-30T00:14:21+08:00</published><updated>2017-12-30T00:14:21+08:00</updated><id>http://localhost:4000/Android%E7%9A%84keystore%E4%BD%BF%E7%94%A8</id><content type="html" xml:base="http://localhost:4000/Android%E7%9A%84keystore%E4%BD%BF%E7%94%A8/">&lt;p&gt;android 查看 keystore信息&lt;/p&gt;

&lt;p&gt;在terminal中执行下面操作&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool -list -v -keystore &lt;span class=&quot;k&quot;&gt;*****&lt;/span&gt;.jks
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输入后再输入密码则&lt;/p&gt;

&lt;p&gt;可以查看到相关信息&lt;/p&gt;

&lt;p&gt;遇到 &lt;em&gt;cannot load keystore&lt;/em&gt; 这个问题。可以使用这个查看&lt;strong&gt;alias&lt;/strong&gt;.&lt;/p&gt;</content><author><name></name></author><category term="Android" /><summary type="html">android 查看 keystore信息</summary></entry><entry><title type="html">Handler的使用</title><link href="http://localhost:4000/Handler%E7%9A%84%E4%BD%BF%E7%94%A8/" rel="alternate" type="text/html" title="Handler的使用" /><published>2017-11-26T00:00:00+08:00</published><updated>2017-11-26T00:00:00+08:00</updated><id>http://localhost:4000/Handler%E7%9A%84%E4%BD%BF%E7%94%A8</id><content type="html" xml:base="http://localhost:4000/Handler%E7%9A%84%E4%BD%BF%E7%94%A8/">&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Handler class should be static or leaks might occur Android&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Handler类应该是static类型，否则有可能造成泄露。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHandler&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;MyHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;what&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Activity会被gc掉，如果Activity被回收掉，那么Handler应该在使用之前对其状态进行判断，这样就不会发生空指针。&lt;/p&gt;</content><author><name></name></author><category term="Android" /><summary type="html"></summary></entry><entry><title type="html">Android持续集成到Travis-ci</title><link href="http://localhost:4000/Android%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%88%B0Travis-ci/" rel="alternate" type="text/html" title="Android持续集成到Travis-ci" /><published>2017-09-12T00:00:00+08:00</published><updated>2017-09-12T00:00:00+08:00</updated><id>http://localhost:4000/Android%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%88%B0Travis-ci</id><content type="html" xml:base="http://localhost:4000/Android%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%88%B0Travis-ci/">&lt;p&gt;在github上的项目可以使用&lt;a href=&quot;https://www.travis-ci.org/&quot;&gt;Travis-ci&lt;/a&gt;进行持续集成。&lt;/p&gt;

&lt;p&gt;在项目中部署一个文件，后缀名为&lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这里是官方的说明&lt;a href=&quot;https://docs.travis-ci.com/user/languages/android&quot;&gt;&lt;strong&gt;Building an Android Project&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tools&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;platform-tools&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tools&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# The BuildTools version used by your project&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build-tools-25.0.0&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# The SDK version used to compile your project&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;android-25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在项目中添加了上面的文件后，只要点开运行，就可以看到了。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;问题&lt;/em&gt;：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Travis-ci &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./gradlew build&quot;&lt;/span&gt; exited with 1.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的 &lt;strong&gt;script&lt;/strong&gt; 部分如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;script:
- chmod +x ./gradlew
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最终如下可以执行通过&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;android&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Uncomment the lines below if you want to&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# use the latest revision of Android SDK Tools&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;platform-tools&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tools&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# The BuildTools version used by your project&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build-tools-25.0.0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# The SDK version used to compile your project&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;android-25&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# Specify at least one system image,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# if you need to run emulator(s) during your tests&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# - sys-img-armeabi-v7a-android-22&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# - sys-img-armeabi-v7a-android-17&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod +x ./gradlew&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="Travis-ci" /><summary type="html">在github上的项目可以使用Travis-ci进行持续集成。</summary></entry></feed>